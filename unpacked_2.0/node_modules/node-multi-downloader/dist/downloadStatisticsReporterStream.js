"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const stream_1 = require("stream");
const TIMEOUT_DURATION = 250;
class DownloadStatisticsReporterStream extends stream_1.Readable {
    stream;
    done;
    calcReportTimeout;
    constructor(options) {
        super({ ...options, objectMode: true });
        this.stream = options.stream;
        this.done = false;
        this.calcReportTimeout = null;
        this.stream.on('end', () => {
            this.done = true;
        });
        this.on('finish', () => {
            this.done = true;
        });
        this.stream.on('error', (err) => {
            this.emit('error', err);
        });
        this.calcReport();
    }
    clearCalcTimeout() {
        if (this.calcReportTimeout) {
            clearTimeout(this.calcReportTimeout);
            this.calcReportTimeout = null;
        }
    }
    calcReport() {
        const { total, downloaded, rate, key } = this.stream;
        if (!this.done) {
            this.push({ total, downloaded, rate, key, done: this.done });
            this.calcReportTimeout = setTimeout(() => this.calcReport(), TIMEOUT_DURATION / 2);
        }
        else {
            this.push({ total, downloaded: total, rate: 0, key, done: true });
            this.clearCalcTimeout();
            this.emit('end');
        }
    }
    _read() { }
}
exports.default = DownloadStatisticsReporterStream;
//# sourceMappingURL=downloadStatisticsReporterStream.js.map