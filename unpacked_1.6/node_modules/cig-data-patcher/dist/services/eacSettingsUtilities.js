"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeSettings = exports.readSettings = exports.isAvailable = void 0;
const promises_1 = __importDefault(require("fs/promises"));
const SETTINGS_FILENAME = 'Settings.json';
function getAntiCheatDirectory(gameDirectory) {
    return `${gameDirectory}\\EasyAntiCheat`;
}
async function isAvailable(gameDirectory) {
    try {
        await promises_1.default.access(getAntiCheatDirectory(gameDirectory));
        return true;
    }
    catch (e) {
        return false;
    }
}
exports.isAvailable = isAvailable;
async function readSettings(gameDirectory) {
    const content = await promises_1.default.readFile(`${getAntiCheatDirectory(gameDirectory)}\\${SETTINGS_FILENAME}`, {
        encoding: 'utf-8',
    });
    return JSON.parse(content);
}
exports.readSettings = readSettings;
function writeSettings(gameDirectory, settings) {
    const filePath = `${getAntiCheatDirectory(gameDirectory)}\\${SETTINGS_FILENAME}`;
    const data = JSON.stringify(settings, null, 4);
    return promises_1.default.writeFile(filePath, data, { encoding: 'utf-8' });
}
exports.writeSettings = writeSettings;
//# sourceMappingURL=eacSettingsUtilities.js.map