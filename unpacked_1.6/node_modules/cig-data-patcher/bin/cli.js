#!/usr/bin/env node
/* eslint-disable import/no-dynamic-require */
/* eslint-disable @typescript-eslint/no-var-requires */
const { spawn } = require('child_process');
const path = require('path');

const mainScriptPath = path.join(__dirname, '../dist/index.js');

// if node version is >= 18, use --openssl-legacy-provider flag to use legacy crypto
// https://nodejs.org/api/cli.html#--openssl-legacy-provider
//
if (parseInt(process.versions.node.split('.')[0], 10) >= 18) {
  const args = ['--openssl-legacy-provider', mainScriptPath, ...process.argv.slice(2)];
  // spawn a new process with flags and arguments and ensure to pass the signal to the child process
  // in order to exit the child process when the parent process is terminated
  const subprocess = spawn(process.argv0, args, { stdio: ['inherit', 'inherit', 'inherit', 'ipc'] });

  process.on('SIGINT', () => {
    subprocess.send({ signal: 'SIGINT' });
  });

  return;
}

require(mainScriptPath);
